:github_url: hide

.. DO NOT EDIT THIS FILE!!!
.. Generated automatically from Godot engine sources.
.. Generator: https://github.com/godotengine/godot/tree/3.5/doc/tools/make_rst.py.
.. XML source: https://github.com/godotengine/godot/tree/3.5/doc/classes/GradientTexture2D.xml.

.. _class_GradientTexture2D:

GradientTexture2D
=================

**Inherits:** :ref:`Texture<class_Texture>` **<** :ref:`Resource<class_Resource>` **<** :ref:`Reference<class_Reference>` **<** :ref:`Object<class_Object>`

Gradient-filled 2D texture.

Description
-----------

The texture uses a :ref:`Gradient<class_Gradient>` to fill the texture data in 2D space. The gradient is filled according to the specified :ref:`fill<class_GradientTexture2D_property_fill>` and :ref:`repeat<class_GradientTexture2D_property_repeat>` types using colors obtained from the gradient. The texture does not necessarily represent an exact copy of the gradient, but instead an interpolation of samples obtained from the gradient at fixed steps (see :ref:`width<class_GradientTexture2D_property_width>` and :ref:`height<class_GradientTexture2D_property_height>`). See also :ref:`GradientTexture<class_GradientTexture>` and :ref:`CurveTexture<class_CurveTexture>`.

Properties
----------

+----------------------------------------------+--------------------------------------------------------------+----------------------------------------------------------------+
| :ref:`Fill<enum_GradientTexture2D_Fill>`     | :ref:`fill<class_GradientTexture2D_property_fill>`           | ``0``                                                          |
+----------------------------------------------+--------------------------------------------------------------+----------------------------------------------------------------+
| :ref:`Vector2<class_Vector2>`                | :ref:`fill_from<class_GradientTexture2D_property_fill_from>` | ``Vector2( 0, 0 )``                                            |
+----------------------------------------------+--------------------------------------------------------------+----------------------------------------------------------------+
| :ref:`Vector2<class_Vector2>`                | :ref:`fill_to<class_GradientTexture2D_property_fill_to>`     | ``Vector2( 1, 0 )``                                            |
+----------------------------------------------+--------------------------------------------------------------+----------------------------------------------------------------+
| :ref:`int<class_int>`                        | flags                                                        | ``7`` (overrides :ref:`Texture<class_Texture_property_flags>`) |
+----------------------------------------------+--------------------------------------------------------------+----------------------------------------------------------------+
| :ref:`Gradient<class_Gradient>`              | :ref:`gradient<class_GradientTexture2D_property_gradient>`   |                                                                |
+----------------------------------------------+--------------------------------------------------------------+----------------------------------------------------------------+
| :ref:`int<class_int>`                        | :ref:`height<class_GradientTexture2D_property_height>`       | ``64``                                                         |
+----------------------------------------------+--------------------------------------------------------------+----------------------------------------------------------------+
| :ref:`Repeat<enum_GradientTexture2D_Repeat>` | :ref:`repeat<class_GradientTexture2D_property_repeat>`       | ``0``                                                          |
+----------------------------------------------+--------------------------------------------------------------+----------------------------------------------------------------+
| :ref:`bool<class_bool>`                      | :ref:`use_hdr<class_GradientTexture2D_property_use_hdr>`     | ``false``                                                      |
+----------------------------------------------+--------------------------------------------------------------+----------------------------------------------------------------+
| :ref:`int<class_int>`                        | :ref:`width<class_GradientTexture2D_property_width>`         | ``64``                                                         |
+----------------------------------------------+--------------------------------------------------------------+----------------------------------------------------------------+

Enumerations
------------

.. _enum_GradientTexture2D_Fill:

.. _class_GradientTexture2D_constant_FILL_LINEAR:

.. _class_GradientTexture2D_constant_FILL_RADIAL:

enum **Fill**:

- **FILL_LINEAR** = **0** --- The colors are linearly interpolated in a straight line.

- **FILL_RADIAL** = **1** --- The colors are linearly interpolated in a circular pattern.

----

.. _enum_GradientTexture2D_Repeat:

.. _class_GradientTexture2D_constant_REPEAT_NONE:

.. _class_GradientTexture2D_constant_REPEAT:

.. _class_GradientTexture2D_constant_REPEAT_MIRROR:

enum **Repeat**:

- **REPEAT_NONE** = **0** --- The gradient fill is restricted to the range defined by :ref:`fill_from<class_GradientTexture2D_property_fill_from>` to :ref:`fill_to<class_GradientTexture2D_property_fill_to>` offsets.

- **REPEAT** = **1** --- The texture is filled starting from :ref:`fill_from<class_GradientTexture2D_property_fill_from>` to :ref:`fill_to<class_GradientTexture2D_property_fill_to>` offsets, repeating the same pattern in both directions.

- **REPEAT_MIRROR** = **2** --- The texture is filled starting from :ref:`fill_from<class_GradientTexture2D_property_fill_from>` to :ref:`fill_to<class_GradientTexture2D_property_fill_to>` offsets, mirroring the pattern in both directions.

Property Descriptions
---------------------

.. _class_GradientTexture2D_property_fill:

- :ref:`Fill<enum_GradientTexture2D_Fill>` **fill**

+-----------+-----------------+
| *Default* | ``0``           |
+-----------+-----------------+
| *Setter*  | set_fill(value) |
+-----------+-----------------+
| *Getter*  | get_fill()      |
+-----------+-----------------+

The gradient fill type, one of the :ref:`Fill<enum_GradientTexture2D_Fill>` values. The texture is filled by interpolating colors starting from :ref:`fill_from<class_GradientTexture2D_property_fill_from>` to :ref:`fill_to<class_GradientTexture2D_property_fill_to>` offsets.

----

.. _class_GradientTexture2D_property_fill_from:

- :ref:`Vector2<class_Vector2>` **fill_from**

+-----------+----------------------+
| *Default* | ``Vector2( 0, 0 )``  |
+-----------+----------------------+
| *Setter*  | set_fill_from(value) |
+-----------+----------------------+
| *Getter*  | get_fill_from()      |
+-----------+----------------------+

The initial offset used to fill the texture specified in UV coordinates.

----

.. _class_GradientTexture2D_property_fill_to:

- :ref:`Vector2<class_Vector2>` **fill_to**

+-----------+---------------------+
| *Default* | ``Vector2( 1, 0 )`` |
+-----------+---------------------+
| *Setter*  | set_fill_to(value)  |
+-----------+---------------------+
| *Getter*  | get_fill_to()       |
+-----------+---------------------+

The final offset used to fill the texture specified in UV coordinates.

----

.. _class_GradientTexture2D_property_gradient:

- :ref:`Gradient<class_Gradient>` **gradient**

+----------+---------------------+
| *Setter* | set_gradient(value) |
+----------+---------------------+
| *Getter* | get_gradient()      |
+----------+---------------------+

The :ref:`Gradient<class_Gradient>` used to fill the texture.

----

.. _class_GradientTexture2D_property_height:

- :ref:`int<class_int>` **height**

+-----------+-------------------+
| *Default* | ``64``            |
+-----------+-------------------+
| *Setter*  | set_height(value) |
+-----------+-------------------+
| *Getter*  | get_height()      |
+-----------+-------------------+

The number of vertical color samples that will be obtained from the :ref:`Gradient<class_Gradient>`, which also represents the texture's height.

----

.. _class_GradientTexture2D_property_repeat:

- :ref:`Repeat<enum_GradientTexture2D_Repeat>` **repeat**

+-----------+-------------------+
| *Default* | ``0``             |
+-----------+-------------------+
| *Setter*  | set_repeat(value) |
+-----------+-------------------+
| *Getter*  | get_repeat()      |
+-----------+-------------------+

The gradient repeat type, one of the :ref:`Repeat<enum_GradientTexture2D_Repeat>` values. The texture is filled starting from :ref:`fill_from<class_GradientTexture2D_property_fill_from>` to :ref:`fill_to<class_GradientTexture2D_property_fill_to>` offsets by default, but the gradient fill can be repeated to cover the entire texture.

----

.. _class_GradientTexture2D_property_use_hdr:

- :ref:`bool<class_bool>` **use_hdr**

+-----------+--------------------+
| *Default* | ``false``          |
+-----------+--------------------+
| *Setter*  | set_use_hdr(value) |
+-----------+--------------------+
| *Getter*  | is_using_hdr()     |
+-----------+--------------------+

If ``true``, the generated texture will support high dynamic range (:ref:`Image.FORMAT_RGBAF<class_Image_constant_FORMAT_RGBAF>` format). This allows for glow effects to work if :ref:`Environment.glow_enabled<class_Environment_property_glow_enabled>` is ``true``. If ``false``, the generated texture will use low dynamic range; overbright colors will be clamped (:ref:`Image.FORMAT_RGBA8<class_Image_constant_FORMAT_RGBA8>` format).

----

.. _class_GradientTexture2D_property_width:

- :ref:`int<class_int>` **width**

+-----------+------------------+
| *Default* | ``64``           |
+-----------+------------------+
| *Setter*  | set_width(value) |
+-----------+------------------+
| *Getter*  | get_width()      |
+-----------+------------------+

The number of horizontal color samples that will be obtained from the :ref:`Gradient<class_Gradient>`, which also represents the texture's width.

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
